version: v1.0
name: go-build
agent:
  machine:
    type: f1-standard-2
    os_image: ubuntu2204
auto_cancel:
  running:
    when: "branch != 'master'"
  queued:
    when: "branch != 'master'"

execution_time_limit:
  minutes: 60

global_job_config:
  secrets:
    - name: docker-hub
  prologue:
    commands:
      - echo $DOCKERHUB_PASSWORD | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
      - checkout
      # Semaphore is doing shallow clone on a commit without tags.
      # unshallow it for GIT_VERSION:=$(shell git describe --tags --dirty --always) @ Makefile.common
      - git fetch --unshallow
      - |
        if [ "${SEMAPHORE_GIT_REF_TYPE}" = "tag" ]; then
          export VERSION_TAG=${SEMAPHORE_GIT_TAG_NAME}
        else
          export VERSION_TAG=${SEMAPHORE_GIT_WORKING_BRANCH}
        fi

promotions:
  # Publish images for master or release tags (example: 1.23.3-llvm18.1.8-k8s1.30.5).
  - name: Publish calico/base images
    pipeline_file: promotions/calico-base.yml
    auto_promote:
      when: "branch = 'master' OR tag =~ '^1\\.\\d+\\.\\d-llvm\\d+\\.\\d\\.\\d-k8s1\\.\\d+\\.\\d'"
  - name: Publish calico/go-build images
    pipeline_file: promotions/calico-go-build.yml
    auto_promote:
      when: "branch = 'master' OR tag =~ '^1\\.\\d+\\.\\d-llvm\\d+\\.\\d\\.\\d-k8s1\\.\\d+\\.\\d'"
  - name: Publish calico/qemu-user-static image
    pipeline_file: promotions/qemu-user-static.yml
    auto_promote:
      when: "branch = 'master' OR tag =~ '^1\\.\\d+\\.\\d-llvm\\d+\\.\\d\\.\\d-k8s1\\.\\d+\\.\\d'"

blocks:
  - name: calico/go-build image
    dependencies: []
    task:
      agent:
        machine:
          type: f1-standard-4
          os_image: ubuntu2204
      env_vars:
        # The branch to test the current go-build against
        - name: CALICO_BRANCH
          value: master
      jobs:
        - name: Build calico/go-build image
          commands:
            - make -C images calico-go-build-image ARCH=$ARCH
            - if [ "${ARCH}" == "amd64" ]; then git clone -b "${CALICO_BRANCH}" --depth 1 git@github.com:projectcalico/calico.git calico; fi
            - if [ "${ARCH}" == "amd64" ]; then cd calico; fi
            - if [ "${ARCH}" == "amd64" ]; then sed -i 's/^GO_BUILD_VER=.*$/GO_BUILD_VER=${VERSION_TAG}/' metadata.mk; fi
            - if [ "${ARCH}" == "amd64" ]; then cd felix && make ut && cd ../calicoctl && make ut && cd ../libcalico-go && make ut; fi
          matrix:
            - env_var: ARCH
              values: ["amd64", "arm64", "ppc64le", "s390x"]

  - name: calico/base image
    dependencies: []
    task:
      jobs:
        - name: Build calico/base image
          commands:
            - make -C images calico-base-image ARCH=$ARCH CALICO_BASE_CLEANUP=$CALICO_BASE_CLEANUP
            # Verify the unstripped calico/base builds Calico modules (only necessary for unstripped base where we have no other visibility into proper Calico function).
            - if [ "${ARCH}" == "amd64" -a "$CALICO_BASE_CLEANUP" == "unstripped" ]; then git clone --depth 1 git@github.com:projectcalico/calico.git calico; fi
            - if [ "${ARCH}" == "amd64" -a "$CALICO_BASE_CLEANUP" == "unstripped" ]; then cd calico; fi
            - if [ "${ARCH}" == "amd64" -a "$CALICO_BASE_CLEANUP" == "unstripped" ]; then sed -i 's/^CALICO_BASE=.*$/CALICO_BASE=base-unstripped:${VERSION_TAG}-amd64/' metadata.mk; fi
            - if [ "${ARCH}" == "amd64" -a "$CALICO_BASE_CLEANUP" == "unstripped" ]; then make NO_DOCKER_PULL=1 -C apiserver image && make NO_DOCKER_PULL=1 -C calicoctl image && make NO_DOCKER_PULL=1 -C cni-plugin image && make NO_DOCKER_PULL=1 -C typha image; fi

          matrix:
            - env_var: ARCH
              values: ["amd64", "arm64", "ppc64le", "s390x"]
            - env_var: CALICO_BASE_CLEANUP
              values: ["stripped", "unstripped"]
