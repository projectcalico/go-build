FROM s390x/golang:1.21.3-alpine3.18

ARG GO_LINT_VERSION=v1.54.2
ARG K8S_VERSION=v1.27.6

# Enable non-native builds of this image on an amd64 hosts.
COPY qemu-s390x-static /usr/bin/

# Install bash for the entry script (and because it's generally useful)
# Install curl
# Install git for fetching Go dependencies
# Install ssh for fetching Go dependencies
# Install wget since it's useful for fetching
# Install make for building things
# Install util-linux for column command (used for output formatting).
# Install grep, sed, zip, and jq for use in some Makefiles
# Install shadow for useradd (it allows to use big UID)
RUN apk update && apk add --no-cache curl bash git openssh make wget util-linux tini file grep sed jq zip shadow libpcap-dev
RUN apk upgrade --no-cache

# Install Go utilities

# Install linting tools
RUN curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b /usr/local/bin $GO_LINT_VERSION

# Install necessary Kubernetes binaries used in tests.
RUN wget https://dl.k8s.io/${K8S_VERSION}/bin/linux/s390x/kube-apiserver -O /usr/local/bin/kube-apiserver && chmod +x /usr/local/bin/kube-apiserver && \
  wget https://dl.k8s.io/release/${K8S_VERSION}/bin/linux/s390x/kubectl -O /usr/local/bin/kubectl && chmod +x /usr/local/bin/kubectl && \
  wget https://dl.k8s.io/${K8S_VERSION}/bin/linux/s390x/kube-controller-manager -O /usr/local/bin/kube-controller-manager && chmod +x /usr/local/bin/kube-controller-manager

# Install ginkgo CLI tool for running tests
# Install ginkgo v2 as ginkgo2 and keep ginkgo v1 as ginkgo
RUN go install github.com/onsi/ginkgo/v2/ginkgo@v2.13.0 && mv /go/bin/ginkgo /go/bin/ginkgo2 && \
  go install github.com/onsi/ginkgo/ginkgo@v1.16.5 && \
  go install github.com/mikefarah/yq/v3@3.4.1 && \
  go install github.com/pmezard/licenses@master && \
  go install github.com/swaggo/swag/cmd/swag@v1.16.2 && \
  go install github.com/wadey/gocovmerge@master && \
  go install k8s.io/code-generator/cmd/deepcopy-gen@v0.27.6 && \
  go install k8s.io/code-generator/cmd/openapi-gen@v0.27.6 && \
  go clean -modcache && go clean -cache

# Ensure that everything under the GOPATH is writable by everyone
RUN chmod -R 777 $GOPATH
ENV HOME $GOPATH

# Disable ssh host key checking
RUN echo 'Host *' >> /etc/ssh/ssh_config \
  && echo '    StrictHostKeyChecking no' >> /etc/ssh/ssh_config
